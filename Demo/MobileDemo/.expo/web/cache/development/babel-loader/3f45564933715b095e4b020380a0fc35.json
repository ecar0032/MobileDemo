{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mikea\\\\Documents\\\\GitHub\\\\MobileDemo\\\\Demo\\\\MobileDemo\\\\node_modules\\\\react-native-responsive-layout\\\\src\\\\components\\\\section\\\\index.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { DirectionProp } from \"../../shared/props\";\nimport { checkInsideGrid, warn } from \"../../utils\";\nvar styles = StyleSheet.create({\n  horizontal: {\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    flexDirection: 'column'\n  },\n  vertical: {\n    alignItems: 'flex-start',\n    flexWrap: 'wrap',\n    flexDirection: 'row'\n  },\n  stretch: {\n    flex: 1,\n    alignSelf: 'stretch'\n  }\n});\n\nvar Section = function Section(_ref, _ref2) {\n  var children = _ref.children,\n      style = _ref.style,\n      stretch = _ref.stretch;\n  var gridContentDirection = _ref2.gridContentDirection,\n      gridStretch = _ref2.gridStretch;\n\n  if (process.env.NODE_ENV === 'development') {\n    warn(!gridStretch && !!stretch, 'Using `stretch` on `Section` without using `stretchable` on `Grid` has no stretching effect because grid itself won\\'t be stretched and section will just collapse so it won\\'t be visible.\\nPlease make `Grid` stretchable as well.');\n  }\n\n  return React.createElement(View, {\n    style: [gridContentDirection === 'vertical' ? styles.vertical : styles.horizontal, stretch ? styles.stretch : null, style],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nSection.contextTypes = {\n  gridContentDirection: checkInsideGrid(DirectionProp),\n  gridStretch: checkInsideGrid(PropTypes.bool)\n};\nSection.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  style: ViewPropTypes.style,\n  stretch: PropTypes.bool\n};\nSection.defaultProps = {\n  style: {},\n  stretch: false\n};\nexport default Section;","map":{"version":3,"sources":["C:/Users/mikea/Documents/GitHub/MobileDemo/Demo/MobileDemo/node_modules/react-native-responsive-layout/src/components/section/index.js"],"names":["React","PropTypes","ViewPropTypes","DirectionProp","checkInsideGrid","warn","styles","StyleSheet","create","horizontal","alignItems","flexWrap","flexDirection","vertical","stretch","flex","alignSelf","Section","children","style","gridContentDirection","gridStretch","process","env","NODE_ENV","contextTypes","bool","propTypes","oneOfType","arrayOf","node","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;SAC2BC,a;AAE3B,SAASC,aAAT;AACA,SAASC,eAAT,EAA0BC,IAA1B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE,YADF;AAEVC,IAAAA,QAAQ,EAAE,MAFA;AAGVC,IAAAA,aAAa,EAAE;AAHL,GADmB;AAM/BC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,UAAU,EAAE,YADJ;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGRC,IAAAA,aAAa,EAAE;AAHP,GANqB;AAW/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,SAAS,EAAE;AAFJ;AAXsB,CAAlB,CAAf;;AAuBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,cAAyE;AAAA,MAAtEC,QAAsE,QAAtEA,QAAsE;AAAA,MAA5DC,KAA4D,QAA5DA,KAA4D;AAAA,MAArDL,OAAqD,QAArDA,OAAqD;AAAA,MAAxCM,oBAAwC,SAAxCA,oBAAwC;AAAA,MAAlBC,WAAkB,SAAlBA,WAAkB;;AACvF,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CnB,IAAAA,IAAI,CACF,CAACgB,WAAD,IAAgB,CAAC,CAACP,OADhB,EAEF,sOAFE,CAAJ;AAID;;AAED,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACJM,oBAAoB,KAAK,UAAzB,GAAsCd,MAAM,CAACO,QAA7C,GAAwDP,MAAM,CAACG,UAD3D,EAEJK,OAAO,GAAGR,MAAM,CAACQ,OAAV,GAAoB,IAFvB,EAGLK,KAHK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,QAPH,CADF;AAWD,CAnBD;;AAsBAD,OAAO,CAACQ,YAAR,GAAuB;AACrBL,EAAAA,oBAAoB,EAAEhB,eAAe,CAACD,aAAD,CADhB;AAErBkB,EAAAA,WAAW,EAAEjB,eAAe,CAACH,SAAS,CAACyB,IAAX;AAFP,CAAvB;AAKAT,OAAO,CAACU,SAAR,GAAoB;AAClBT,EAAAA,QAAQ,EAAEjB,SAAS,CAAC2B,SAAV,CAAoB,CAC5B3B,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,IAA5B,CAD4B,EAE5B7B,SAAS,CAAC6B,IAFkB,CAApB,EAGPC,UAJe;AAKlBZ,EAAAA,KAAK,EAAEjB,aAAa,CAACiB,KALH;AAMlBL,EAAAA,OAAO,EAAEb,SAAS,CAACyB;AAND,CAApB;AASAT,OAAO,CAACe,YAAR,GAAuB;AACrBb,EAAAA,KAAK,EAAE,EADc;AAErBL,EAAAA,OAAO,EAAE;AAFY,CAAvB;AAKA,eAAeG,OAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, View, ViewPropTypes } from 'react-native';\r\n\r\nimport { DirectionProp } from '../../shared/props';\r\nimport { checkInsideGrid, warn } from '../../utils';\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  horizontal: {\r\n    alignItems: 'flex-start', // Required to support RN42+ due a bug with wrap\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'column',\r\n  },\r\n  vertical: {\r\n    alignItems: 'flex-start', // Required to support RN42+ due a bug with wrap\r\n    flexWrap: 'wrap',\r\n    flexDirection: 'row',\r\n  },\r\n  stretch: {\r\n    flex: 1,\r\n    alignSelf: 'stretch',\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * Component used to contain group of Blocks.\r\n *\r\n * @type {React.StatelessComponent<{stretch?: boolean, style?: any, children: any}>}\r\n */\r\nconst Section = ({ children, style, stretch }, { gridContentDirection, gridStretch }) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    warn(\r\n      !gridStretch && !!stretch,\r\n      'Using `stretch` on `Section` without using `stretchable` on `Grid` has no stretching effect because grid itself won\\'t be stretched and section will just collapse so it won\\'t be visible.\\nPlease make `Grid` stretchable as well.',\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        (gridContentDirection === 'vertical' ? styles.vertical : styles.horizontal),\r\n        (stretch ? styles.stretch : null),\r\n        style,\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nSection.contextTypes = {\r\n  gridContentDirection: checkInsideGrid(DirectionProp),\r\n  gridStretch: checkInsideGrid(PropTypes.bool),\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n  style: ViewPropTypes.style,\r\n  stretch: PropTypes.bool,\r\n};\r\n\r\nSection.defaultProps = {\r\n  style: {},\r\n  stretch: false,\r\n};\r\n\r\nexport default Section;\r\n"]},"metadata":{},"sourceType":"module"}