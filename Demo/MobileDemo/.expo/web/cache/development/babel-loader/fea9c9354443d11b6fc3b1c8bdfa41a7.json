{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport { SIZE_NAMES } from \"../../shared/constants\";\nexport var BreakpointsProp = PropTypes.shape(SIZE_NAMES.reduce(function (previous, size) {\n  return _objectSpread(_objectSpread({}, previous), {}, _defineProperty({}, size, PropTypes.number));\n}, {}));","map":{"version":3,"sources":["C:/Users/mikea/Documents/GitHub/MobileDemo/Demo/MobileDemo/node_modules/react-native-responsive-layout/src/components/grid/props.js"],"names":["PropTypes","SIZE_NAMES","BreakpointsProp","shape","reduce","previous","size","number"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT;AAMA,OAAO,IAAMC,eAAe,GAAGF,SAAS,CAACG,KAAV,CAAgBF,UAAU,CAACG,MAAX,CAC7C,UAACC,QAAD,EAAWC,IAAX;AAAA,yCAA0BD,QAA1B,2BAAqCC,IAArC,EAA4CN,SAAS,CAACO,MAAtD;AAAA,CAD6C,EAE7C,EAF6C,CAAhB,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport { SIZE_NAMES } from '../../shared/constants';\r\n\r\n\r\n/**\r\n * Validates that grid breakpoints must be numbers.\r\n */\r\nexport const BreakpointsProp = PropTypes.shape(SIZE_NAMES.reduce(\r\n  (previous, size) => ({ ...previous, [size]: PropTypes.number }),\r\n  {},\r\n));\r\n"]},"metadata":{},"sourceType":"module"}